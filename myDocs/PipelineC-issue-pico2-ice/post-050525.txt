git diff Makefile 
diff --git a/examples/pico-ice/ice_makefile_pipelinec/Makefile b/examples/pico-ice/ice_makefile_pipelinec/Makefile
index 869797a..6175976 100644
--- a/examples/pico-ice/ice_makefile_pipelinec/Makefile
+++ b/examples/pico-ice/ice_makefile_pipelinec/Makefile
@@ -58,7 +58,7 @@ prog_pico2: gateware.bin
 
 gateware.bin: $(SV_TOP_FILE)
        $(ICEPLL) -q -i 12 -o $(PLL_CLK_MHZ) -m -f pll.v
-       $(YOSYS) -q --hash-seed 0 -m ghdl -p "ghdl --std=08 -frelaxed `cat pipelinec_output/vhdl_files.txt` -e pipelinec_top; read_verilog -sv $(SV_TOP_FILE) pll.v; synth_ice40 -top $(TOP_NAME) -json $*.json" 2> yosys_stderr.log
+       $(YOSYS) -q  -m ghdl -p "ghdl --std=08 -frelaxed `cat pipelinec_output/vhdl_files.txt` -e pipelinec_top; read_verilog -sv $(SV_TOP_FILE) pll.v; synth_ice40 -top $(TOP_NAME) -json $*.json" 2> yosys_stderr.log
        $(NEXTPNR) -q --seed 0 --up5k --package sg48 --pcf ice40.pcf --json $*.json --asc $*.asc $(NEXTPNR_ARGS)
        $(ICEPACK) $*.asc $@

diff --git a/examples/net/eth_sw.c b/examples/net/eth_sw.c
index 38275e5..4cadd07 100644
--- a/examples/net/eth_sw.c
+++ b/examples/net/eth_sw.c
@@ -14,7 +14,8 @@
 #include "fpga_mac.h"
 #endif
 #ifndef DEFAULT_IF
-#define DEFAULT_IF     "enx0050b6248f73"
+//#define DEFAULT_IF   "enx0050b6248f73"
+#define DEFAULT_IF     "eth0"
 #endif
 #define BUF_SIZ                1024
 #define PAYLOAD_MAX (BUF_SIZ-sizeof(struct ether_header))
diff --git a/examples/net/work_test.c b/examples/net/work_test.c
index bc4b08b..c195969 100644
--- a/examples/net/work_test.c
+++ b/examples/net/work_test.c
@@ -22,7 +22,8 @@ double get_wall_time(){
 
 // Use eth to transport inputs and outputs
 #include "fpga_mac.h" // MAC addr to expect from FPGA

make clean all BOARD=PICO2 PIPELINEC_TOP_FILE=ethernet_top.c PLL_CLK_MHZ=16.0 NEXTPNR_ARGS="--pre-pack eth_clocks.py" 

virtp.sh
#!/bin/bash
python3 -m venv env ; source env/bin/activate

(env) devel@pi5-90:~/PipelineC/examples/pico-ice/ice_makefile_pipelinec $ pip3 install mpremote
(env) devel@pi5-90:~/PipelineC/examples/pico-ice/ice_makefile_pipelinec $ mpremote run pico2_program_ice.py
start blinking red
did not complete 
devel@pi5-90:~/PipelineC/examples/net $ sudo ./work_test 
CPU threads: 1
n 'work()'s: 1 
Total tx bytes: 8 
Total rx bytes: 4 
CPU took 0.000518 seconds to execute 
CPU iteration time: 0.000518 seconds
CPU bytes per sec: 23162.286240 B/s

from machine import Pin
from machine import UART
import ice
uart = UART(0, 115200)
uart.init(115200, bits=8, parity=None, stop=1, tx=28, rx=29) # init with given parameters
stat = "sending abc...xyz recieving ABC...XYZ"
print(stat)
bufout = "abcdefghijklmnopqrstuvwxyz"
print( bufout)
uart.write(bufout)
print(uart.read(26))
bufout = "0123456789"
print( bufout)
uart.write(bufout)
print(uart.read(10))
stat = "sending ZYX...CBA recieving zyx...cba"
print(stat)
bufout = "ZYXWUTUSRQPONMLKJIHGFEDCBA"
print( bufout)
uart.write(bufout)
print(uart.read(26))
uart-echo did not work
(env) devel@pi5-90:~/PipelineC/examples/pico-ice/ice_makefile_pipelinec $ mpremote run test_uart-a-z.py 
sending abc...xyz recieving ABC...XYZ
abcdefghijklmnopqrstuvwxyz
None
0123456789
None
sending ZYX...CBA recieving zyx...cba
ZYXWUTUSRQPONMLKJIHGFEDCBA
None
