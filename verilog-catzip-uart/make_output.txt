yosys -p "synth_ice40 -top top -json top-40.json" top-40.v

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33+79 (git sha1 b52f6cb19, gcc 12.2.0-14 -fPIC -Os)


-- Parsing `top-40.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: top-40.v
Parsing Verilog input from `top-40.v' to AST representation.
Storing AST representation for module `$abstract\uart'.
Storing AST representation for module `$abstract\jpeg'.
Storing AST representation for module `$abstract\Mux'.
Storing AST representation for module `$abstract\top'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json top-40.json' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\top'.
Generating RTLIL representation for module `\top'.
Warning: reg '\sig_send' is assigned in a continuous assignment at top-40.v:92.10-92.30.
Warning: reg '\i_sig_tx0_data' is assigned in a continuous assignment at top-40.v:94.10-94.39.
Warning: reg '\i_sig_tx1_data' is assigned in a continuous assignment at top-40.v:95.10-95.39.
Warning: wire '\led' is assigned in a block at top-40.v:194.7-194.20.
Warning: wire '\ram_wren' is assigned in a block at top-40.v:201.5-201.21.
Warning: wire '\ram_data_in' is assigned in a block at top-40.v:210.7-210.29.
Warning: wire '\ram_wren' is assigned in a block at top-40.v:211.7-211.23.
Warning: wire '\ram_data_in' is assigned in a block at top-40.v:217.7-217.29.
Warning: wire '\ram_wren' is assigned in a block at top-40.v:218.7-218.23.
Warning: wire '\ram_data_in' is assigned in a block at top-40.v:224.7-224.29.
Warning: wire '\ram_wren' is assigned in a block at top-40.v:225.7-225.23.
Warning: wire '\ram_data_in' is assigned in a block at top-40.v:231.7-231.29.
Warning: wire '\ram_wren' is assigned in a block at top-40.v:232.7-232.23.
Warning: wire '\led' is assigned in a block at top-40.v:244.10-244.34.

2.3.1. Analyzing design hierarchy..
Top module:  \top

2.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\Mux'.
Generating RTLIL representation for module `\Mux'.
Note: Assuming pure combinatorial block at Mux.v:29.1-36.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.

2.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\jpeg'.
Generating RTLIL representation for module `\jpeg'.
Parameter \BIT_WIDTH = 11
Parameter \BAUD_RATE = 4000000
Parameter \CLOCK_FREQ_HZ = 40000000

2.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\uart'.
Parameter \BIT_WIDTH = 11
Parameter \BAUD_RATE = 4000000
Parameter \CLOCK_FREQ_HZ = 40000000
Generating RTLIL representation for module `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart'.
Parameter \BIT_WIDTH = 11
Parameter \BAUD_RATE = 4000000
Parameter \CLOCK_FREQ_HZ = 40000000
Found cached RTLIL representation for module `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart'.
Reprocessing module top because instantiated module jpeg has become available.
Generating RTLIL representation for module `\top'.
Warning: reg '\sig_send' is assigned in a continuous assignment at top-40.v:92.10-92.30.
Warning: reg '\i_sig_tx0_data' is assigned in a continuous assignment at top-40.v:94.10-94.39.
Warning: reg '\i_sig_tx1_data' is assigned in a continuous assignment at top-40.v:95.10-95.39.
Warning: wire '\led' is assigned in a block at top-40.v:194.7-194.20.
Warning: wire '\ram_wren' is assigned in a block at top-40.v:201.5-201.21.
Warning: wire '\ram_data_in' is assigned in a block at top-40.v:210.7-210.29.
Warning: wire '\ram_wren' is assigned in a block at top-40.v:211.7-211.23.
Warning: wire '\ram_data_in' is assigned in a block at top-40.v:217.7-217.29.
Warning: wire '\ram_wren' is assigned in a block at top-40.v:218.7-218.23.
Warning: wire '\ram_data_in' is assigned in a block at top-40.v:224.7-224.29.
Warning: wire '\ram_wren' is assigned in a block at top-40.v:225.7-225.23.
Warning: wire '\ram_data_in' is assigned in a block at top-40.v:231.7-231.29.
Warning: wire '\ram_wren' is assigned in a block at top-40.v:232.7-232.23.
Warning: wire '\led' is assigned in a block at top-40.v:244.10-244.34.

2.3.5. Analyzing design hierarchy..
Top module:  \top
Used module:     \Mux
Used module:     \jpeg
Parameter \BIT_WIDTH = 11
Parameter \BAUD_RATE = 4000000
Parameter \CLOCK_FREQ_HZ = 40000000
Found cached RTLIL representation for module `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart'.
Parameter \BIT_WIDTH = 11
Parameter \BAUD_RATE = 4000000
Parameter \CLOCK_FREQ_HZ = 40000000
Found cached RTLIL representation for module `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart'.

2.3.6. Analyzing design hierarchy..
Top module:  \top
Used module:     \Mux
Used module:     \jpeg
Used module:     $paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart

2.3.7. Analyzing design hierarchy..
Top module:  \top
Used module:     \Mux
Used module:     \jpeg
Used module:     $paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart
Removing unused module `$abstract\top'.
Removing unused module `$abstract\Mux'.
Removing unused module `$abstract\jpeg'.
Removing unused module `$abstract\uart'.
Removed 4 unused modules.
Warning: Resizing cell port top.spram.ADDRESS from 16 bits to 14 bits.

2.4. Executing PROC pass (convert processes to netlists).

2.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `\top.$proc$top-40.v:133$470'.
Removing empty process `top.$proc$top-40.v:133$470'.
Cleaned up 5 empty switches.

2.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173 in module SB_DFFSR.
Marked 3 switch rules as full_case in process $proc$jpeg.v:31$417 in module jpeg.
Marked 1 switch rules as full_case in process $proc$Mux.v:29$415 in module Mux.
Marked 3 switch rules as full_case in process $proc$uart.v:71$439 in module $paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.
Marked 3 switch rules as full_case in process $proc$uart.v:36$434 in module $paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.
Removed a total of 0 dead cases.

2.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 11 redundant assignments.
Promoted 31 assignments to connections.

2.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$244'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$233'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$222'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$219'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$213'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$202'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$195'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$191'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$184'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$181'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$178'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$175'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$172'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$170'.
  Set init value: \Q = 1'0
Found init rule in `\top.$proc$top-40.v:0$502'.
  Set init value: \led = 3'000
  Set init value: \state = 8'00000001
  Set init value: \counter = 0

2.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
Found async reset \S in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Found async reset \R in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Found async reset \S in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
Found async reset \R in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.

2.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~33 debug messages>

2.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$244'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$233'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$222'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$219'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$213'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$208'.
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$207'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$206'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$202'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$195'.
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$191'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$184'.
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$181'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$175'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$172'.
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$170'.
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$169'.
Creating decoders for process `\top.$proc$top-40.v:0$501'.
Creating decoders for process `\top.$proc$top-40.v:198$476'.
     1/7: $0\ram_addr[15:0] [15:2]
     2/7: $0\ram_addr[15:0] [1:0]
     3/7: $0\counter[31:0]
     4/7: $0\state[7:0]
     5/7: $0\ram_data_in[15:0]
     6/7: $0\ram_wren[0:0]
     7/7: $0\led[2:0]
Creating decoders for process `\top.$proc$top-40.v:0$502'.
Creating decoders for process `\top.$proc$top-40.v:97$468'.
Creating decoders for process `\jpeg.$proc$jpeg.v:31$417'.
     1/1: $0\res_s[15:0]
Creating decoders for process `\Mux.$proc$Mux.v:29$415'.
     1/1: $1\z[7:0]
Creating decoders for process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:71$439'.
     1/7: $0\sig_tx_buf[7:0] [7]
     2/7: $0\sig_tx_buf[7:0] [6:0]
     3/7: $0\sig_tx_bit[9:0] [0]
     4/7: $0\txstate[0:0]
     5/7: $0\sig_tx_cnt[10:0]
     6/7: $0\sig_tx_bit[9:0] [9:1]
     7/7: $0\tx[0:0]
Creating decoders for process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:36$434'.
     1/8: $0\sig_rx_buf[7:0] [7]
     2/8: $0\sig_rx_buf[7:0] [6:0]
     3/8: $0\sig_rx_bit[9:0] [0]
     4/8: $0\rxstate[0:0]
     5/8: $0\sig_rx_cnt[10:0]
     6/8: $0\sig_rx_bit[9:0] [9:1]
     7/8: $0\rx_data[7:0]
     8/8: $0\valid[0:0]

2.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.\res0_s[0]' from process `\top.$proc$top-40.v:0$501'.
No latch inferred for signal `\top.\res1_s[0]' from process `\top.$proc$top-40.v:0$501'.
No latch inferred for signal `\top.\res2_s[2]' from process `\top.$proc$top-40.v:0$501'.
No latch inferred for signal `\top.\res3_s[3]' from process `\top.$proc$top-40.v:0$501'.
No latch inferred for signal `\Mux.\z' from process `\Mux.$proc$Mux.v:29$415'.

2.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
  created $adff cell `$procdff$707' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
  created $dff cell `$procdff$708' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
  created $adff cell `$procdff$709' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
  created $dff cell `$procdff$710' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
  created $adff cell `$procdff$711' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
  created $dff cell `$procdff$712' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
  created $adff cell `$procdff$713' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
  created $dff cell `$procdff$714' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
  created $dff cell `$procdff$715' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$207'.
  created $dff cell `$procdff$716' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
  created $adff cell `$procdff$717' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
  created $dff cell `$procdff$718' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
  created $adff cell `$procdff$719' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
  created $dff cell `$procdff$720' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
  created $adff cell `$procdff$721' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
  created $dff cell `$procdff$722' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.
  created $adff cell `$procdff$723' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
  created $dff cell `$procdff$724' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
  created $dff cell `$procdff$725' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$169'.
  created $dff cell `$procdff$726' with positive edge clock.
Creating register for signal `\top.\led' using process `\top.$proc$top-40.v:198$476'.
  created $dff cell `$procdff$727' with positive edge clock.
Creating register for signal `\top.\ram_addr' using process `\top.$proc$top-40.v:198$476'.
  created $dff cell `$procdff$728' with positive edge clock.
Creating register for signal `\top.\ram_data_in' using process `\top.$proc$top-40.v:198$476'.
  created $dff cell `$procdff$729' with positive edge clock.
Creating register for signal `\top.\ram_wren' using process `\top.$proc$top-40.v:198$476'.
  created $dff cell `$procdff$730' with positive edge clock.
Creating register for signal `\top.\state' using process `\top.$proc$top-40.v:198$476'.
  created $dff cell `$procdff$731' with positive edge clock.
Creating register for signal `\top.\counter' using process `\top.$proc$top-40.v:198$476'.
  created $dff cell `$procdff$732' with positive edge clock.
Creating register for signal `\top.\sig_counter' using process `\top.$proc$top-40.v:97$468'.
  created $dff cell `$procdff$733' with positive edge clock.
Creating register for signal `\jpeg.\res_s' using process `\jpeg.$proc$jpeg.v:31$417'.
  created $dff cell `$procdff$734' with positive edge clock.
Creating register for signal `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.\tx' using process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:71$439'.
  created $dff cell `$procdff$735' with positive edge clock.
Creating register for signal `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.\sig_tx_buf' using process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:71$439'.
  created $dff cell `$procdff$736' with positive edge clock.
Creating register for signal `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.\sig_tx_cnt' using process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:71$439'.
  created $dff cell `$procdff$737' with positive edge clock.
Creating register for signal `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.\sig_tx_bit' using process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:71$439'.
  created $dff cell `$procdff$738' with positive edge clock.
Creating register for signal `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.\txstate' using process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:71$439'.
  created $dff cell `$procdff$739' with positive edge clock.
Creating register for signal `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.\valid' using process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:36$434'.
  created $dff cell `$procdff$740' with positive edge clock.
Creating register for signal `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.\rx_data' using process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:36$434'.
  created $dff cell `$procdff$741' with positive edge clock.
Creating register for signal `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.\sig_rx_buf' using process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:36$434'.
  created $dff cell `$procdff$742' with positive edge clock.
Creating register for signal `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.\sig_rx_cnt' using process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:36$434'.
  created $dff cell `$procdff$743' with positive edge clock.
Creating register for signal `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.\sig_rx_bit' using process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:36$434'.
  created $dff cell `$procdff$744' with positive edge clock.
Creating register for signal `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.\rxstate' using process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:36$434'.
  created $dff cell `$procdff$745' with positive edge clock.

2.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$244'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$233'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$222'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$219'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$213'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$208'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$207'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$206'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$202'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$195'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$191'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$184'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$181'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$175'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$172'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$170'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$169'.
Removing empty process `top.$proc$top-40.v:0$501'.
Found and cleaned up 3 empty switches in `\top.$proc$top-40.v:198$476'.
Removing empty process `top.$proc$top-40.v:198$476'.
Removing empty process `top.$proc$top-40.v:0$502'.
Removing empty process `top.$proc$top-40.v:97$468'.
Found and cleaned up 3 empty switches in `\jpeg.$proc$jpeg.v:31$417'.
Removing empty process `jpeg.$proc$jpeg.v:31$417'.
Found and cleaned up 1 empty switch in `\Mux.$proc$Mux.v:29$415'.
Removing empty process `Mux.$proc$Mux.v:29$415'.
Found and cleaned up 4 empty switches in `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:71$439'.
Removing empty process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:71$439'.
Found and cleaned up 4 empty switches in `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:36$434'.
Removing empty process `$paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.$proc$uart.v:36$434'.
Cleaned up 33 empty switches.

2.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>
Optimizing module jpeg.
<suppressed ~6 debug messages>
Optimizing module Mux.
<suppressed ~1 debug messages>
Optimizing module $paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.
<suppressed ~20 debug messages>

2.5. Executing FLATTEN pass (flatten design).
Deleting now unused module jpeg.
Deleting now unused module Mux.
Deleting now unused module $paramod$dc5745ab0631fad0791bb135eeb00ac70ba60b9a\uart.
<suppressed ~8 debug messages>

2.6. Executing TRIBUF pass.

2.7. Executing DEMINOUT pass (demote inout ports to input or output).

2.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 90 unused cells and 328 unused wires.
<suppressed ~155 debug messages>

2.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\tx1.sel is used but has no driver.
Warning: Wire top.\tx1.a [7] is used but has no driver.
Warning: Wire top.\tx1.a [6] is used but has no driver.
Warning: Wire top.\tx1.a [5] is used but has no driver.
Warning: Wire top.\tx1.a [4] is used but has no driver.
Warning: Wire top.\tx1.a [3] is used but has no driver.
Warning: Wire top.\tx1.a [2] is used but has no driver.
Warning: Wire top.\tx1.a [1] is used but has no driver.
Warning: Wire top.\tx1.a [0] is used but has no driver.
Warning: Wire top.\tx0.sel is used but has no driver.
Warning: Wire top.\tx0.a [7] is used but has no driver.
Warning: Wire top.\tx0.a [6] is used but has no driver.
Warning: Wire top.\tx0.a [5] is used but has no driver.
Warning: Wire top.\tx0.a [4] is used but has no driver.
Warning: Wire top.\tx0.a [3] is used but has no driver.
Warning: Wire top.\tx0.a [2] is used but has no driver.
Warning: Wire top.\tx0.a [1] is used but has no driver.
Warning: Wire top.\tx0.a [0] is used but has no driver.
Found and reported 18 problems.

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~96 debug messages>
Removed a total of 32 cells.

2.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\uart_inst0.$procmux$673: \uart_inst0.rxstate -> 1'0
      Replacing known input bits on port A of cell $flatten\uart_inst0.$procmux$671: \uart_inst0.rxstate -> 1'1
      Replacing known input bits on port A of cell $flatten\uart_inst0.$procmux$669: \uart_inst0.rxstate -> 1'1
      Replacing known input bits on port B of cell $flatten\uart_inst0.$procmux$675: \uart_inst0.rxstate -> 1'0
      Replacing known input bits on port A of cell $flatten\uart_inst1.$procmux$620: \uart_inst1.txstate -> 1'0
      Replacing known input bits on port A of cell $flatten\uart_inst1.$procmux$618: \uart_inst1.txstate -> 1'1
      Replacing known input bits on port A of cell $flatten\uart_inst1.$procmux$616: \uart_inst1.txstate -> 1'1
      Replacing known input bits on port A of cell $flatten\uart_inst1.$procmux$622: \uart_inst1.txstate -> 1'0
      Replacing known input bits on port A of cell $flatten\uart_inst1.$procmux$673: \uart_inst1.rxstate -> 1'0
      Replacing known input bits on port A of cell $flatten\uart_inst1.$procmux$671: \uart_inst1.rxstate -> 1'1
      Replacing known input bits on port A of cell $flatten\uart_inst1.$procmux$669: \uart_inst1.rxstate -> 1'1
      Replacing known input bits on port B of cell $flatten\uart_inst1.$procmux$675: \uart_inst1.rxstate -> 1'0
      Replacing known input bits on port A of cell $flatten\uart_inst0.$procmux$620: \uart_inst0.txstate -> 1'0
      Replacing known input bits on port A of cell $flatten\uart_inst0.$procmux$618: \uart_inst0.txstate -> 1'1
      Replacing known input bits on port A of cell $flatten\uart_inst0.$procmux$616: \uart_inst0.txstate -> 1'1
      Replacing known input bits on port A of cell $flatten\uart_inst0.$procmux$622: \uart_inst0.txstate -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

2.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $procmux$548: $auto$opt_reduce.cc:134:opt_pmux$747
    New ctrl vector for $pmux cell $procmux$578: $auto$opt_reduce.cc:134:opt_pmux$749
  Optimizing cells in module \top.
Performed a total of 2 changes.

2.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

2.11.6. Executing OPT_DFF pass (perform DFF optimizations).

2.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 33 unused wires.
<suppressed ~1 debug messages>

2.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.9. Rerunning OPT passes. (Maybe there is more to do..)

2.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

2.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.11.13. Executing OPT_DFF pass (perform DFF optimizations).

2.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.16. Finished OPT passes. (There is nothing left to do.)

2.12. Executing FSM pass (extract and optimize FSM).

2.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.ram_data_in as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.state as FSM state register:
    Register has an initialization value.

2.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$732 ($dff) from module top (D = $procmux$561_Y, Q = \counter).
Adding SRST signal on $auto$ff.cc:266:slice$750 ($dffe) from module top (D = $add$top-40.v:237$477_Y, Q = \counter, rval = 0).
Adding EN signal on $procdff$731 ($dff) from module top (D = $0\state[7:0], Q = \state).
Adding EN signal on $procdff$729 ($dff) from module top (D = $0\ram_data_in[15:0], Q = \ram_data_in).
Adding EN signal on $procdff$728 ($dff) from module top (D = 14'00000000000000, Q = \ram_addr [15:2]).
Adding EN signal on $procdff$728 ($dff) from module top (D = $0\ram_addr[15:0] [1:0], Q = \ram_addr [1:0]).
Adding EN signal on $procdff$727 ($dff) from module top (D = \ram_data_out [2:0], Q = \led).
Adding EN signal on $flatten\uart_inst1.$procdff$744 ($dff) from module top (D = 1'1, Q = \uart_inst1.sig_rx_bit [0]).
Adding EN signal on $flatten\uart_inst1.$procdff$744 ($dff) from module top (D = $flatten\uart_inst1.$0\sig_rx_bit[9:0] [9:1], Q = \uart_inst1.sig_rx_bit [9:1]).
Adding EN signal on $flatten\uart_inst1.$procdff$742 ($dff) from module top (D = { \rx [1] \uart_inst1.sig_rx_buf [7:1] }, Q = \uart_inst1.sig_rx_buf).
Adding EN signal on $flatten\uart_inst1.$procdff$741 ($dff) from module top (D = \uart_inst1.sig_rx_buf, Q = \uart_inst1.rx_data).
Adding EN signal on $flatten\uart_inst1.$procdff$740 ($dff) from module top (D = $flatten\uart_inst1.$0\valid[0:0], Q = \uart_inst1.valid).
Adding EN signal on $flatten\uart_inst1.$procdff$738 ($dff) from module top (D = 1'1, Q = \uart_inst1.sig_tx_bit [0]).
Adding EN signal on $flatten\uart_inst1.$procdff$738 ($dff) from module top (D = $flatten\uart_inst1.$0\sig_tx_bit[9:0] [9:1], Q = \uart_inst1.sig_tx_bit [9:1]).
Adding EN signal on $flatten\uart_inst1.$procdff$736 ($dff) from module top (D = \uart_inst1.tx_data [7], Q = \uart_inst1.sig_tx_buf [7]).
Adding EN signal on $flatten\uart_inst1.$procdff$736 ($dff) from module top (D = $flatten\uart_inst1.$0\sig_tx_buf[7:0] [6:0], Q = \uart_inst1.sig_tx_buf [6:0]).
Adding EN signal on $flatten\uart_inst1.$procdff$735 ($dff) from module top (D = $flatten\uart_inst1.$0\tx[0:0], Q = \uart_inst1.tx).
Adding EN signal on $flatten\uart_inst0.$procdff$744 ($dff) from module top (D = 1'1, Q = \uart_inst0.sig_rx_bit [0]).
Adding EN signal on $flatten\uart_inst0.$procdff$744 ($dff) from module top (D = $flatten\uart_inst0.$0\sig_rx_bit[9:0] [9:1], Q = \uart_inst0.sig_rx_bit [9:1]).
Adding EN signal on $flatten\uart_inst0.$procdff$742 ($dff) from module top (D = { \rx [0] \uart_inst0.sig_rx_buf [7:1] }, Q = \uart_inst0.sig_rx_buf).
Adding EN signal on $flatten\uart_inst0.$procdff$741 ($dff) from module top (D = \uart_inst0.sig_rx_buf, Q = \uart_inst0.rx_data).
Adding EN signal on $flatten\uart_inst0.$procdff$740 ($dff) from module top (D = $flatten\uart_inst0.$0\valid[0:0], Q = \uart_inst0.valid).
Adding EN signal on $flatten\uart_inst0.$procdff$738 ($dff) from module top (D = 1'1, Q = \uart_inst0.sig_tx_bit [0]).
Adding EN signal on $flatten\uart_inst0.$procdff$738 ($dff) from module top (D = $flatten\uart_inst0.$0\sig_tx_bit[9:0] [9:1], Q = \uart_inst0.sig_tx_bit [9:1]).
Adding EN signal on $flatten\uart_inst0.$procdff$736 ($dff) from module top (D = \uart_inst0.tx_data [7], Q = \uart_inst0.sig_tx_buf [7]).
Adding EN signal on $flatten\uart_inst0.$procdff$736 ($dff) from module top (D = $flatten\uart_inst0.$0\sig_tx_buf[7:0] [6:0], Q = \uart_inst0.sig_tx_buf [6:0]).
Adding EN signal on $flatten\uart_inst0.$procdff$735 ($dff) from module top (D = $flatten\uart_inst0.$0\tx[0:0], Q = \uart_inst0.tx).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$846 ($dffe) from module top.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$821 ($dffe) from module top.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$794 ($dffe) from module top.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$769 ($dffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$758 ($dffe) from module top.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$758 ($dffe) from module top.

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 29 unused cells and 20 unused wires.
<suppressed ~30 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~27 debug messages>

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$872: { $auto$opt_dff.cc:194:make_patterns_logic$869 $auto$opt_dff.cc:194:make_patterns_logic$867 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$863: { $auto$opt_dff.cc:194:make_patterns_logic$858 $auto$opt_dff.cc:194:make_patterns_logic$860 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$845: { $auto$opt_dff.cc:194:make_patterns_logic$842 $auto$opt_dff.cc:194:make_patterns_logic$840 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$820: { $auto$opt_dff.cc:194:make_patterns_logic$815 $auto$opt_dff.cc:194:make_patterns_logic$817 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$811: { $auto$opt_dff.cc:194:make_patterns_logic$806 $auto$opt_dff.cc:194:make_patterns_logic$808 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$793: { $auto$opt_dff.cc:194:make_patterns_logic$790 $auto$opt_dff.cc:194:make_patterns_logic$788 }
  Optimizing cells in module \top.
Performed a total of 6 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

2.13.13. Executing OPT_DFF pass (perform DFF optimizations).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 25 unused wires.
<suppressed ~1 debug messages>

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.16. Rerunning OPT passes. (Maybe there is more to do..)

2.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

2.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.20. Executing OPT_DFF pass (perform DFF optimizations).

2.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.23. Finished OPT passes. (There is nothing left to do.)

2.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 7 bits (of 8) from port B of cell top.$procmux$552_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$procmux$551_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$procmux$556_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$procmux$550_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$procmux$549_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$add$top-40.v:237$477 ($add).
Removed top 7 bits (of 32) from port B of cell top.$eq$top-40.v:240$478 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$add$top-40.v:241$479 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$add$top-40.v:241$479 ($add).
Removed top 7 bits (of 32) from port B of cell top.$eq$top-40.v:243$480 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$791 ($ne).
Removed top 31 bits (of 32) from port B of cell top.$flatten\uart_inst0.$add$uart.v:100$443 ($add).
Removed top 21 bits (of 32) from port Y of cell top.$flatten\uart_inst0.$add$uart.v:100$443 ($add).
Removed top 7 bits (of 11) from port B of cell top.$flatten\uart_inst0.$eq$uart.v:85$441 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\uart_inst0.$add$uart.v:63$438 ($add).
Removed top 21 bits (of 32) from port Y of cell top.$flatten\uart_inst0.$add$uart.v:63$438 ($add).
Removed top 7 bits (of 11) from port B of cell top.$flatten\uart_inst0.$eq$uart.v:48$436 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$763 ($ne).
Removed top 31 bits (of 32) from port B of cell top.$flatten\uart_inst1.$add$uart.v:100$443 ($add).
Removed top 21 bits (of 32) from port Y of cell top.$flatten\uart_inst1.$add$uart.v:100$443 ($add).
Removed top 7 bits (of 11) from port B of cell top.$flatten\uart_inst1.$eq$uart.v:85$441 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\uart_inst1.$add$uart.v:63$438 ($add).
Removed top 21 bits (of 32) from port Y of cell top.$flatten\uart_inst1.$add$uart.v:63$438 ($add).
Removed top 7 bits (of 11) from port B of cell top.$flatten\uart_inst1.$eq$uart.v:48$436 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$843 ($ne).
Removed top 14 bits (of 16) from wire top.$0\ram_addr[15:0].
Removed top 30 bits (of 32) from wire top.$add$top-40.v:241$479_Y.
Removed top 1 bits (of 8) from wire top.$flatten\uart_inst0.$0\sig_tx_buf[7:0].
Removed top 2 bits (of 11) from wire top.$flatten\uart_inst0.$0\sig_tx_cnt[10:0].
Removed top 21 bits (of 32) from wire top.$flatten\uart_inst0.$add$uart.v:100$443_Y.
Removed top 21 bits (of 32) from wire top.$flatten\uart_inst0.$add$uart.v:63$438_Y.
Removed top 1 bits (of 8) from wire top.$flatten\uart_inst1.$0\sig_tx_buf[7:0].
Removed top 21 bits (of 32) from wire top.$flatten\uart_inst1.$add$uart.v:100$443_Y.
Removed top 21 bits (of 32) from wire top.$flatten\uart_inst1.$add$uart.v:63$438_Y.
Removed top 14 bits (of 16) from wire top.ram_addr.

2.15. Executing PEEPOPT pass (run peephole optimizers).

2.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

2.17. Executing SHARE pass (SAT-based resource sharing).

2.18. Executing TECHMAP pass (map to technology primitives).

2.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

2.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$top-40.v:237$477 ($add).
  creating $macc model for $add$top-40.v:241$479 ($add).
  creating $macc model for $flatten\uart_inst0.$add$uart.v:100$443 ($add).
  creating $macc model for $flatten\uart_inst0.$add$uart.v:63$438 ($add).
  creating $macc model for $flatten\uart_inst1.$add$uart.v:100$443 ($add).
  creating $macc model for $flatten\uart_inst1.$add$uart.v:63$438 ($add).
  creating $alu model for $macc $flatten\uart_inst1.$add$uart.v:63$438.
  creating $alu model for $macc $flatten\uart_inst1.$add$uart.v:100$443.
  creating $alu model for $macc $flatten\uart_inst0.$add$uart.v:63$438.
  creating $alu model for $macc $flatten\uart_inst0.$add$uart.v:100$443.
  creating $alu model for $macc $add$top-40.v:241$479.
  creating $alu model for $macc $add$top-40.v:237$477.
  creating $alu cell for $add$top-40.v:237$477: $auto$alumacc.cc:485:replace_alu$884
  creating $alu cell for $add$top-40.v:241$479: $auto$alumacc.cc:485:replace_alu$887
  creating $alu cell for $flatten\uart_inst0.$add$uart.v:100$443: $auto$alumacc.cc:485:replace_alu$890
  creating $alu cell for $flatten\uart_inst0.$add$uart.v:63$438: $auto$alumacc.cc:485:replace_alu$893
  creating $alu cell for $flatten\uart_inst1.$add$uart.v:100$443: $auto$alumacc.cc:485:replace_alu$896
  creating $alu cell for $flatten\uart_inst1.$add$uart.v:63$438: $auto$alumacc.cc:485:replace_alu$899
  created 6 $alu and 0 $macc cells.

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

2.22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.6. Executing OPT_DFF pass (perform DFF optimizations).

2.22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.22.9. Finished OPT passes. (There is nothing left to do.)

2.23. Executing MEMORY pass.

2.23.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.23.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.23.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

2.23.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.23.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

2.23.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.23.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.23.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.23.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.23.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.25. Executing MEMORY_LIBMAP pass (mapping memories to cells).

2.26. Executing TECHMAP pass (map to technology primitives).

2.26.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

2.26.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

2.26.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.27. Executing ICE40_BRAMINIT pass.

2.28. Executing OPT pass (performing simple optimizations).

2.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~50 debug messages>

2.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$795 ($dffe) from module top (D = $flatten\uart_inst1.$procmux$632_Y, Q = \uart_inst1.sig_tx_bit [9:1], rval = 9'000000000).
Adding SRST signal on $auto$ff.cc:266:slice$822 ($dffe) from module top (D = $flatten\uart_inst0.$procmux$685_Y, Q = \uart_inst0.sig_rx_bit [9:1], rval = 9'000000000).
Adding SRST signal on $flatten\uart_inst1.$procdff$743 ($dff) from module top (D = { $auto$wreduce.cc:461:run$881 [10:3] $auto$wreduce.cc:461:run$881 [1] }, Q = { \uart_inst1.sig_rx_cnt [10:3] \uart_inst1.sig_rx_cnt [1] }, rval = 9'000000000).
Adding SRST signal on $flatten\uart_inst1.$procdff$743 ($dff) from module top (D = { $flatten\uart_inst1.$procmux$679_Y [2] $flatten\uart_inst1.$procmux$679_Y [0] }, Q = { \uart_inst1.sig_rx_cnt [2] \uart_inst1.sig_rx_cnt [0] }, rval = 2'11).
Adding SRST signal on $flatten\uart_inst1.$procdff$737 ($dff) from module top (D = { $auto$wreduce.cc:461:run$880 [10:3] $auto$wreduce.cc:461:run$880 [1] }, Q = { \uart_inst1.sig_tx_cnt [10:3] \uart_inst1.sig_tx_cnt [1] }, rval = 9'000000000).
Adding SRST signal on $flatten\uart_inst1.$procdff$737 ($dff) from module top (D = { $flatten\uart_inst1.$procmux$626_Y [2] $flatten\uart_inst1.$procmux$626_Y [0] }, Q = { \uart_inst1.sig_tx_cnt [2] \uart_inst1.sig_tx_cnt [0] }, rval = 2'11).
Adding SRST signal on $flatten\uart_inst0.$procdff$743 ($dff) from module top (D = { $auto$wreduce.cc:461:run$878 [10:3] $auto$wreduce.cc:461:run$878 [1] }, Q = { \uart_inst0.sig_rx_cnt [10:3] \uart_inst0.sig_rx_cnt [1] }, rval = 9'000000000).
Adding SRST signal on $flatten\uart_inst0.$procdff$743 ($dff) from module top (D = { $flatten\uart_inst0.$procmux$679_Y [2] $flatten\uart_inst0.$procmux$679_Y [0] }, Q = { \uart_inst0.sig_rx_cnt [2] \uart_inst0.sig_rx_cnt [0] }, rval = 2'11).
Adding SRST signal on $flatten\uart_inst0.$procdff$737 ($dff) from module top (D = { $auto$wreduce.cc:461:run$877 [10:3] $auto$wreduce.cc:461:run$877 [1] }, Q = { \uart_inst0.sig_tx_cnt [10:3] \uart_inst0.sig_tx_cnt [1] }, rval = 9'000000000).
Adding SRST signal on $flatten\uart_inst0.$procdff$737 ($dff) from module top (D = { $flatten\uart_inst0.$procmux$626_Y [2] $flatten\uart_inst0.$procmux$626_Y [0] }, Q = { \uart_inst0.sig_tx_cnt [2] \uart_inst0.sig_tx_cnt [0] }, rval = 2'11).
Adding SRST signal on $auto$ff.cc:266:slice$770 ($dffe) from module top (D = $flatten\uart_inst1.$procmux$685_Y, Q = \uart_inst1.sig_rx_bit [9:1], rval = 9'000000000).
Adding SRST signal on $auto$ff.cc:266:slice$847 ($dffe) from module top (D = $flatten\uart_inst0.$procmux$632_Y, Q = \uart_inst0.sig_tx_bit [9:1], rval = 9'000000000).

2.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 28 unused wires.
<suppressed ~9 debug messages>

2.28.5. Rerunning OPT passes. (Removed registers in this run.)

2.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

2.28.8. Executing OPT_DFF pass (perform DFF optimizations).

2.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

2.28.10. Finished fast OPT passes.

2.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

2.30. Executing OPT pass (performing simple optimizations).

2.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

2.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $procmux$566:
      Old ports: A=8'00000010, B=24'000000110000010000000101, Y=$0\state[7:0]
      New ports: A=3'010, B=9'011100101, Y=$0\state[7:0] [2:0]
      New connections: $0\state[7:0] [7:3] = 5'00000
    Consolidated identical input bits for $pmux cell $procmux$572:
      Old ports: A=16'0000000000000001, B=48'000000000000001000000000000001000000000000000111, Y=$0\ram_data_in[15:0]
      New ports: A=3'001, B=9'010100111, Y=$0\ram_data_in[15:0] [2:0]
      New connections: $0\ram_data_in[15:0] [15:3] = 13'0000000000000
  Optimizing cells in module \top.
Performed a total of 2 changes.

2.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.6. Executing OPT_DFF pass (perform DFF optimizations).

2.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.30.9. Rerunning OPT passes. (Maybe there is more to do..)

2.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

2.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$752 ($dffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$752 ($dffe) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$752 ($dffe) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$752 ($dffe) from module top.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$752 ($dffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$755 ($dffe) from module top.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$755 ($dffe) from module top.

2.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.30.16. Rerunning OPT passes. (Maybe there is more to do..)

2.30.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

2.30.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.30.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.20. Executing OPT_DFF pass (perform DFF optimizations).

2.30.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.30.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.30.23. Finished OPT passes. (There is nothing left to do.)

2.31. Executing ICE40_WRAPCARRY pass (wrap carries).

2.32. Executing TECHMAP pass (map to technology primitives).

2.32.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.32.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$068ad458e7761d78e5eed8238508872e7b0aef95\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~483 debug messages>

2.33. Executing OPT pass (performing simple optimizations).

2.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~467 debug messages>

2.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~237 debug messages>
Removed a total of 79 cells.

2.33.3. Executing OPT_DFF pass (perform DFF optimizations).

2.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 104 unused cells and 324 unused wires.
<suppressed ~105 debug messages>

2.33.5. Finished fast OPT passes.

2.34. Executing ICE40_OPT pass (performing simple optimizations).

2.34.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$884.slice[0].carry: CO=\counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$890.slice[0].carry: CO=\uart_inst0.sig_tx_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$893.slice[0].carry: CO=\uart_inst0.sig_rx_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$896.slice[0].carry: CO=\uart_inst1.sig_tx_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$899.slice[0].carry: CO=\uart_inst1.sig_rx_cnt [0]

2.34.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.34.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.34.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1392 ($_DFFE_PP_) from module top (D = $procmux$555.B_AND_S [6], Q = \state [1], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1332 ($_DFFE_PP_) from module top (D = $procmux$555.B_AND_S [3], Q = \ram_data_in [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1280 ($_DFFE_PP_) from module top (D = $procmux$555.Y_B [1], Q = \ram_addr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$1279 ($_DFFE_PP_) from module top (D = $procmux$555.Y_B [0], Q = \ram_addr [0], rval = 1'0).

2.34.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 2 unused wires.
<suppressed ~5 debug messages>

2.34.6. Rerunning OPT passes. (Removed registers in this run.)

2.34.7. Running ICE40 specific optimizations.

2.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.34.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.34.10. Executing OPT_DFF pass (perform DFF optimizations).

2.34.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.34.12. Finished OPT passes. (There is nothing left to do.)

2.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.36. Executing TECHMAP pass (map to technology primitives).

2.36.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.36.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
No more expansions possible.
<suppressed ~202 debug messages>

2.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$890.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$893.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$896.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$899.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$884.slice[0].carry ($lut).

2.39. Executing ICE40_OPT pass (performing simple optimizations).

2.39.1. Running ICE40 specific optimizations.

2.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~84 debug messages>

2.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~336 debug messages>
Removed a total of 112 cells.

2.39.4. Executing OPT_DFF pass (perform DFF optimizations).

2.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1100 unused wires.
<suppressed ~1 debug messages>

2.39.6. Rerunning OPT passes. (Removed registers in this run.)

2.39.7. Running ICE40 specific optimizations.

2.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.39.10. Executing OPT_DFF pass (perform DFF optimizations).

2.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.39.12. Finished OPT passes. (There is nothing left to do.)

2.40. Executing TECHMAP pass (map to technology primitives).

2.40.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.41. Executing ABC pass (technology mapping using ABC).

2.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 214 gates and 341 wires to a netlist network with 127 inputs and 59 outputs.

2.41.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =      72.
ABC: Participating nodes from both networks       =     160.
ABC: Participating nodes from the first network   =      72. (  82.76 % of nodes)
ABC: Participating nodes from the second network  =      88. ( 101.15 % of nodes)
ABC: Node pairs (any polarity)                    =      72. (  82.76 % of names can be moved)
ABC: Node pairs (same polarity)                   =      63. (  72.41 % of names can be moved)
ABC: Total runtime =     0.02 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       86
ABC RESULTS:        internal signals:      155
ABC RESULTS:           input signals:      127
ABC RESULTS:          output signals:       59
Removing temp directory.

2.42. Executing ICE40_WRAPCARRY pass (wrap carries).

2.43. Executing TECHMAP pass (map to technology primitives).

2.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 5 unused cells and 264 unused wires.

2.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      157
  1-LUT                6
  2-LUT               21
  3-LUT              106
  4-LUT               24
  with \SB_CARRY    (#0)   66
  with \SB_CARRY    (#1)   66

Eliminating LUTs.
Number of LUTs:      157
  1-LUT                6
  2-LUT               21
  3-LUT              106
  4-LUT               24
  with \SB_CARRY    (#0)   66
  with \SB_CARRY    (#1)   66

Combining LUTs.
Number of LUTs:      153
  1-LUT                6
  2-LUT               17
  3-LUT              102
  4-LUT               28
  with \SB_CARRY    (#0)   66
  with \SB_CARRY    (#1)   66

Eliminated 0 LUTs.
Combined 4 LUTs.
<suppressed ~681 debug messages>

2.45. Executing TECHMAP pass (map to technology primitives).

2.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.45.2. Continuing TECHMAP pass.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011000 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$3039c7f41767c4672f4e3f22ad78f16d42720fbf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$279a8d961e6b2ded8450bee8ed637cb9efa31f02\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$1defcde2651b9293b25dc8313a52210a02d52398\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~455 debug messages>
Removed 0 unused cells and 323 unused wires.

2.46. Executing AUTONAME pass.
Renamed 3253 objects in module top (19 iterations).
<suppressed ~475 debug messages>

2.47. Executing HIERARCHY pass (managing design hierarchy).

2.47.1. Analyzing design hierarchy..
Top module:  \top

2.47.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.48. Printing statistics.

=== top ===

   Number of wires:                144
   Number of wire bits:            643
   Number of public wires:         144
   Number of public wire bits:     643
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                401
     SB_CARRY                       66
     SB_DFF                          5
     SB_DFFE                        59
     SB_DFFESR                      70
     SB_DFFESS                       2
     SB_DFFSR                       36
     SB_DFFSS                        8
     SB_LUT4                       153
     SB_PLL40_PAD                    1
     SB_SPRAM256KA                   1

2.49. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.50. Executing JSON backend.

Warnings: 33 unique messages, 47 total
End of script. Logfile hash: 87af5e378a, CPU: user 1.47s system 0.00s, MEM: 22.00 MB peak
Yosys 0.33+79 (git sha1 b52f6cb19, gcc 12.2.0-14 -fPIC -Os)
Time spent: 35% 13x read_verilog (0 sec), 12% 1x abc (0 sec), ...
nextpnr-ice40 --package sg48 --up5k --json top-40.json --pcf 2uarts.pcf --asc top-40.asc
Info: constrained 'rx[0]' to bel 'X19/Y0/io1'
Info: constrained 'tx[0]' to bel 'X18/Y0/io1'
Info: constrained 'led[0]' to bel 'X6/Y31/io0'
Info: constrained 'led[1]' to bel 'X5/Y31/io0'
Info: constrained 'led[2]' to bel 'X4/Y31/io0'
Info: constrained 'clk' to bel 'X12/Y31/io1'
Info: constrained 'rx[1]' to bel 'X22/Y0/io1'
Info: constrained 'tx[1]' to bel 'X19/Y31/io0'

Info: Packing constants..
Info: Packing IOs..
Info: Packing LUT-FFs..
Info:       54 LCs used as LUT4 only
Info:       99 LCs used as LUT4 and DFF
Info: Packing non-LUT FFs..
Info:       81 LCs used as DFF only
Info: Packing carries..
Info:        0 LCs used as CARRY only
Info: Packing indirect carry+LUT pairs...
Info:        0 LUTs merged into carry LCs
Info: Packing RAMs..
Info: Placing PLLs..
Info:   constrained PLL 'pll_inst' to X12/Y31/pll_3
Info: Packing special functions..
Info: Packing PLLs..
Info:   PLL 'pll_inst' has LOCK output, need to pass all outputs via LUT
Info:   LUT strategy for LOCK: move all users to new LUT
Info:   constrained 'pll_inst_PLL$nextpnr_LOCK_lut_through' to X1/Y30/lc0
Info: Promoting globals..
Info: promoting clk_40mhz (fanout 181)
Info: promoting counter_SB_DFFESR_Q_R [reset] (fanout 32)
Info: promoting ram_addr_SB_DFFESR_Q_D_SB_LUT4_O_1_I3[1] [cen] (fanout 32)
Info: Constraining chains...
Info:       13 LCs used to legalise carry chains.
Info: Checksum: 0x1a3d16cd

Info: Device utilisation:
Info: 	         ICESTORM_LC:   258/ 5280     4%
Info: 	        ICESTORM_RAM:     0/   30     0%
Info: 	               SB_IO:     8/   96     8%
Info: 	               SB_GB:     3/    8    37%
Info: 	        ICESTORM_PLL:     1/    1   100%
Info: 	         SB_WARMBOOT:     0/    1     0%
Info: 	        ICESTORM_DSP:     0/    8     0%
Info: 	      ICESTORM_HFOSC:     0/    1     0%
Info: 	      ICESTORM_LFOSC:     0/    1     0%
Info: 	              SB_I2C:     0/    2     0%
Info: 	              SB_SPI:     0/    2     0%
Info: 	              IO_I3C:     0/    2     0%
Info: 	         SB_LEDDA_IP:     0/    1     0%
Info: 	         SB_RGBA_DRV:     0/    1     0%
Info: 	      ICESTORM_SPRAM:     1/    4    25%

Info: Placed 10 cells based on constraints.
Info: Creating initial analytic placement for 182 cells, random placement wirelen = 5727.
Info:     at initial placer iter 0, wirelen = 156
Info:     at initial placer iter 1, wirelen = 143
Info:     at initial placer iter 2, wirelen = 135
Info:     at initial placer iter 3, wirelen = 140
Info: Running main analytical placer, max placement attempts per cell = 10000.
Info:     at iteration #1, type ICESTORM_LC: wirelen solved = 134, spread = 532, legal = 759; time = 0.01s
Info:     at iteration #1, type SB_GB: wirelen solved = 757, spread = 765, legal = 780; time = 0.00s
Info:     at iteration #1, type ICESTORM_SPRAM: wirelen solved = 775, spread = 775, legal = 1085; time = 0.00s
Info:     at iteration #1, type ALL: wirelen solved = 134, spread = 601, legal = 1270; time = 0.01s
Info:     at iteration #2, type ICESTORM_LC: wirelen solved = 561, spread = 875, legal = 1043; time = 0.01s
Info:     at iteration #2, type SB_GB: wirelen solved = 1014, spread = 1024, legal = 1049; time = 0.00s
Info:     at iteration #2, type ICESTORM_SPRAM: wirelen solved = 820, spread = 820, legal = 1117; time = 0.00s
Info:     at iteration #2, type ALL: wirelen solved = 155, spread = 518, legal = 1214; time = 0.01s
Info:     at iteration #3, type ICESTORM_LC: wirelen solved = 595, spread = 839, legal = 1020; time = 0.01s
Info:     at iteration #3, type SB_GB: wirelen solved = 998, spread = 1003, legal = 1020; time = 0.00s
Info:     at iteration #3, type ICESTORM_SPRAM: wirelen solved = 764, spread = 764, legal = 1020; time = 0.00s
Info:     at iteration #3, type ALL: wirelen solved = 193, spread = 472, legal = 954; time = 0.01s
Info:     at iteration #4, type ICESTORM_LC: wirelen solved = 518, spread = 806, legal = 1035; time = 0.01s
Info:     at iteration #4, type SB_GB: wirelen solved = 1014, spread = 1027, legal = 1035; time = 0.00s
Info:     at iteration #4, type ICESTORM_SPRAM: wirelen solved = 810, spread = 810, legal = 1238; time = 0.00s
Info:     at iteration #4, type ALL: wirelen solved = 195, spread = 476, legal = 1202; time = 0.01s
Info:     at iteration #5, type ICESTORM_LC: wirelen solved = 639, spread = 812, legal = 1011; time = 0.01s
Info:     at iteration #5, type SB_GB: wirelen solved = 995, spread = 1007, legal = 1017; time = 0.00s
Info:     at iteration #5, type ICESTORM_SPRAM: wirelen solved = 704, spread = 704, legal = 1043; time = 0.00s
Info:     at iteration #5, type ALL: wirelen solved = 202, spread = 528, legal = 984; time = 0.01s
Info:     at iteration #6, type ICESTORM_LC: wirelen solved = 543, spread = 793, legal = 931; time = 0.01s
Info:     at iteration #6, type SB_GB: wirelen solved = 913, spread = 925, legal = 931; time = 0.00s
Info:     at iteration #6, type ICESTORM_SPRAM: wirelen solved = 687, spread = 687, legal = 1142; time = 0.00s
Info:     at iteration #6, type ALL: wirelen solved = 204, spread = 506, legal = 1168; time = 0.01s
Info:     at iteration #7, type ICESTORM_LC: wirelen solved = 708, spread = 951, legal = 1166; time = 0.01s
Info:     at iteration #7, type SB_GB: wirelen solved = 1142, spread = 1148, legal = 1156; time = 0.00s
Info:     at iteration #7, type ICESTORM_SPRAM: wirelen solved = 777, spread = 777, legal = 1156; time = 0.00s
Info:     at iteration #7, type ALL: wirelen solved = 242, spread = 501, legal = 1003; time = 0.01s
Info:     at iteration #8, type ICESTORM_LC: wirelen solved = 565, spread = 762, legal = 973; time = 0.01s
Info:     at iteration #8, type SB_GB: wirelen solved = 958, spread = 969, legal = 973; time = 0.00s
Info:     at iteration #8, type ICESTORM_SPRAM: wirelen solved = 722, spread = 722, legal = 973; time = 0.00s
Info:     at iteration #8, type ALL: wirelen solved = 231, spread = 501, legal = 967; time = 0.01s
Info: HeAP Placer Time: 0.16s
Info:   of which solving equations: 0.12s
Info:   of which spreading cells: 0.01s
Info:   of which strict legalisation: 0.02s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 60, wirelen = 954
Info:   at iteration #5: temp = 0.000000, timing cost = 86, wirelen = 804
Info:   at iteration #10: temp = 0.000000, timing cost = 86, wirelen = 767
Info:   at iteration #15: temp = 0.000000, timing cost = 84, wirelen = 740
Info:   at iteration #18: temp = 0.000000, timing cost = 84, wirelen = 728 
Info: SA placement time 0.11s

Info: Max frequency for clock 'clk_40mhz_$glb_clk': 49.83 MHz (PASS at 12.00 MHz)

Info: Max delay <async>                    -> posedge clk_40mhz_$glb_clk: 7.54 ns
Info: Max delay posedge clk_40mhz_$glb_clk -> <async>                   : 4.69 ns

Info: Slack histogram:
Info:  legend: * represents 2 endpoint(s)
Info:          + represents [1,2) endpoint(s)
Info: [ 63263,  64068) |***************+
Info: [ 64068,  64873) | 
Info: [ 64873,  65678) | 
Info: [ 65678,  66483) | 
Info: [ 66483,  67288) | 
Info: [ 67288,  68093) | 
Info: [ 68093,  68898) |**+
Info: [ 68898,  69703) |*****+
Info: [ 69703,  70508) |*************************+
Info: [ 70508,  71313) |************************************************************ 
Info: [ 71313,  72118) |********+
Info: [ 72118,  72923) |****+
Info: [ 72923,  73728) |*********+
Info: [ 73728,  74533) |***+
Info: [ 74533,  75338) |***+
Info: [ 75338,  76143) |************+
Info: [ 76143,  76948) |********+
Info: [ 76948,  77753) |*****************************+
Info: [ 77753,  78558) |*******************+
Info: [ 78558,  79363) |********************************************************+
Info: Checksum: 0x709440bb

Info: Routing..
Info: Setting up routing queue.
Info: Routing 742 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:        783 |       34        686 |   34   686 |         0|       0.29       0.29|
Info: Routing complete.
Info: Router1 time 0.29s
Info: Checksum: 0xa155d945

Info: Critical path report for clock 'clk_40mhz_$glb_clk' (posedge -> posedge):
Info: curr total
Info:  1.4  1.4  Source uart_inst0.sig_tx_cnt_SB_DFFSS_Q_1_D_SB_LUT4_O_LC.O
Info:  1.8  3.2    Net uart_inst0.sig_tx_cnt[0] (15,5) -> (14,5)
Info:                Sink $nextpnr_ICESTORM_LC_16.I1
Info:                Defined in:
Info:                  top-40.v:154.5-162.6
Info:                  uart.v:100.23-100.37
Info:                  /usr/local/bin/../share/yosys/ice40/arith_map.v:51.21-51.22
Info:  0.7  3.8  Source $nextpnr_ICESTORM_LC_16.COUT
Info:  0.0  3.8    Net $nextpnr_ICESTORM_LC_16$O (14,5) -> (14,5)
Info:                Sink uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_7_LC.CIN
Info:  0.3  4.1  Source uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_7_LC.COUT
Info:  0.7  4.8    Net $nextpnr_ICESTORM_LC_17$I3 (14,5) -> (14,5)
Info:                Sink $nextpnr_ICESTORM_LC_17.I3
Info:  0.9  5.6  Source $nextpnr_ICESTORM_LC_17.O
Info:  1.8  7.4    Net uart_inst0.sig_tx_cnt_SB_DFFSS_Q_D_SB_LUT4_O_I3[2] (14,5) -> (15,5)
Info:                Sink $nextpnr_ICESTORM_LC_18.I1
Info:                Defined in:
Info:                  top-40.v:154.5-162.6
Info:                  uart.v:100.23-100.37
Info:                  /usr/local/bin/../share/yosys/ice40/arith_map.v:62.5-70.4
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  0.7  8.1  Source $nextpnr_ICESTORM_LC_18.COUT
Info:  0.0  8.1    Net $nextpnr_ICESTORM_LC_18$O (15,5) -> (15,5)
Info:                Sink uart_inst0.sig_tx_cnt_SB_DFFSS_Q_D_SB_LUT4_O_LC.CIN
Info:  0.3  8.4  Source uart_inst0.sig_tx_cnt_SB_DFFSS_Q_D_SB_LUT4_O_LC.COUT
Info:  0.7  9.0    Net $nextpnr_ICESTORM_LC_19$I3 (15,5) -> (15,5)
Info:                Sink $nextpnr_ICESTORM_LC_19.I3
Info:  0.9  9.9  Source $nextpnr_ICESTORM_LC_19.O
Info:  2.4 12.3    Net uart_inst0.sig_tx_cnt_SB_DFFSS_Q_D_SB_LUT4_O_I3[3] (15,5) -> (15,2)
Info:                Sink $nextpnr_ICESTORM_LC_20.I1
Info:                Defined in:
Info:                  top-40.v:154.5-162.6
Info:                  uart.v:100.23-100.37
Info:                  /usr/local/bin/../share/yosys/ice40/arith_map.v:51.21-51.22
Info:  0.7 13.0  Source $nextpnr_ICESTORM_LC_20.COUT
Info:  0.0 13.0    Net $nextpnr_ICESTORM_LC_20$O (15,2) -> (15,2)
Info:                Sink uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_6_LC.CIN
Info:  0.3 13.3  Source uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_6_LC.COUT
Info:  0.0 13.3    Net uart_inst0.sig_tx_cnt_SB_DFFSS_Q_D_SB_LUT4_O_I3[4] (15,2) -> (15,2)
Info:                Sink uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_5_LC.CIN
Info:                Defined in:
Info:                  top-40.v:154.5-162.6
Info:                  uart.v:100.23-100.37
Info:                  /usr/local/bin/../share/yosys/ice40/arith_map.v:51.21-51.22
Info:  0.3 13.5  Source uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_5_LC.COUT
Info:  0.0 13.5    Net uart_inst0.sig_tx_cnt_SB_DFFSS_Q_D_SB_LUT4_O_I3[5] (15,2) -> (15,2)
Info:                Sink uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_4_LC.CIN
Info:                Defined in:
Info:                  top-40.v:154.5-162.6
Info:                  uart.v:100.23-100.37
Info:                  /usr/local/bin/../share/yosys/ice40/arith_map.v:51.21-51.22
Info:  0.3 13.8  Source uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_4_LC.COUT
Info:  0.0 13.8    Net uart_inst0.sig_tx_cnt_SB_DFFSS_Q_D_SB_LUT4_O_I3[6] (15,2) -> (15,2)
Info:                Sink uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_3_LC.CIN
Info:                Defined in:
Info:                  top-40.v:154.5-162.6
Info:                  uart.v:100.23-100.37
Info:                  /usr/local/bin/../share/yosys/ice40/arith_map.v:51.21-51.22
Info:  0.3 14.1  Source uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_3_LC.COUT
Info:  0.0 14.1    Net uart_inst0.sig_tx_cnt_SB_DFFSS_Q_D_SB_LUT4_O_I3[7] (15,2) -> (15,2)
Info:                Sink uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_2_LC.CIN
Info:                Defined in:
Info:                  top-40.v:154.5-162.6
Info:                  uart.v:100.23-100.37
Info:                  /usr/local/bin/../share/yosys/ice40/arith_map.v:51.21-51.22
Info:  0.3 14.4  Source uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_2_LC.COUT
Info:  0.0 14.4    Net uart_inst0.sig_tx_cnt_SB_DFFSS_Q_D_SB_LUT4_O_I3[8] (15,2) -> (15,2)
Info:                Sink uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_1_LC.CIN
Info:                Defined in:
Info:                  top-40.v:154.5-162.6
Info:                  uart.v:100.23-100.37
Info:                  /usr/local/bin/../share/yosys/ice40/arith_map.v:51.21-51.22
Info:  0.3 14.6  Source uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_1_LC.COUT
Info:  0.0 14.6    Net uart_inst0.sig_tx_cnt_SB_DFFSS_Q_D_SB_LUT4_O_I3[9] (15,2) -> (15,2)
Info:                Sink uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_LC.CIN
Info:                Defined in:
Info:                  top-40.v:154.5-162.6
Info:                  uart.v:100.23-100.37
Info:                  /usr/local/bin/../share/yosys/ice40/arith_map.v:51.21-51.22
Info:  0.3 14.9  Source uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_LC.COUT
Info:  1.2 16.1    Net uart_inst0.sig_tx_cnt_SB_DFFSS_Q_D_SB_LUT4_O_I3[10] (15,2) -> (15,3)
Info:                Sink uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_8_LC.I3
Info:                Defined in:
Info:                  top-40.v:154.5-162.6
Info:                  uart.v:100.23-100.37
Info:                  /usr/local/bin/../share/yosys/ice40/arith_map.v:51.21-51.22
Info:  0.8 17.0  Setup uart_inst0.sig_tx_cnt_SB_DFFSR_Q_D_SB_LUT4_O_8_LC.I3
Info: 8.5 ns logic, 8.5 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge clk_40mhz_$glb_clk':
Info: curr total
Info:  0.0  0.0  Source rx[1]$sb_io.D_IN_0
Info:  6.3  6.3    Net rx[1]$SB_IO_IN (22,0) -> (18,26)
Info:                Sink uart_inst1.sig_rx_buf_SB_DFFE_Q_DFFLC.I0
Info:                Defined in:
Info:                  top-40.v:168.5-176.6
Info:                  uart.v:5.12-5.14
Info:  1.2  7.5  Setup uart_inst1.sig_rx_buf_SB_DFFE_Q_DFFLC.I0
Info: 1.2 ns logic, 6.3 ns routing

Info: Critical path report for cross-domain path 'posedge clk_40mhz_$glb_clk' -> '<async>':
Info: curr total
Info:  1.4  1.4  Source uart_inst0.valid_SB_LUT4_I1_LC.O
Info:  3.6  5.0    Net tx[0]$SB_IO_OUT (13,2) -> (18,0)
Info:                Sink tx[0]$sb_io.D_OUT_0
Info:                Defined in:
Info:                  top-40.v:154.5-162.6
Info:                  uart.v:6.12-6.14
Info: 1.4 ns logic, 3.6 ns routing

Info: Max frequency for clock 'clk_40mhz_$glb_clk': 58.96 MHz (PASS at 12.00 MHz)

Info: Max delay <async>                    -> posedge clk_40mhz_$glb_clk: 7.49 ns
Info: Max delay posedge clk_40mhz_$glb_clk -> <async>                   : 4.99 ns

Info: Slack histogram:
Info:  legend: * represents 1 endpoint(s)
Info:          + represents [1,1) endpoint(s)
Info: [ 66371,  67021) |**+
Info: [ 67021,  67671) |**+
Info: [ 67671,  68321) |*********************+
Info: [ 68321,  68971) |*******************+
Info: [ 68971,  69621) |***********+
Info: [ 69621,  70271) |******************+
Info: [ 70271,  70921) |*******+
Info: [ 70921,  71571) |*****************************+
Info: [ 71571,  72221) |****+
Info: [ 72221,  72871) |***+
Info: [ 72871,  73521) |**********************+
Info: [ 73521,  74171) |****+
Info: [ 74171,  74821) |**+
Info: [ 74821,  75471) |*******+
Info: [ 75471,  76121) |********+
Info: [ 76121,  76771) |***************************+
Info: [ 76771,  77421) |*******+
Info: [ 77421,  78071) |*************+
Info: [ 78071,  78721) |********+
Info: [ 78721,  79371) |************************************************************ 

Info: Program finished normally.
icepack top-40.asc top-40.bin
icetime -d up5k -c 40 top-40.asc
// Reading input .asc file..
// Reading 5k chipdb file..
// Creating timing netlist..
// Timing estimate: 16.03 ns (62.37 MHz)
// Checking 25.00 ns (40.00 MHz) clock constraint: PASSED.
bin2uf2 -o test-top.uf2 top-40.bin
